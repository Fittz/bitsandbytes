        
    #reads .msh files generated by freeFEM
    def parse_2D_mesh(self):
        # getting no. of elements from file header
        meshFile = open(self.name+'.msh','r')
        header = meshFile.readline()
        header = header.split()
        nodes,triangles,edges = int(header[0]),int(header[1]),int(header[2])
        #extract nodes
        for i in range(nodes):        
            nodeString = meshFile.readline().strip()
            regex = "\d+\.\d+|\d+"
            match = re.findall(regex, nodeString) 
            x,y,z = match[0],match[1],str(0)
            node = {'id':str(i),'x':x,'y':y,'z':z}
            self.nodeList.append(node)
        
        #extract triangles
        for i in range(triangles):
            triString = meshFile.readline().strip()
            regex = "\d+"
            match = re.findall(regex, triString) 
            #slffea freaks out it the index does not start at 0
            a,b,c = int(match[0])-1,int(match[1])-1,int(match[2])-1 
            triangle = {'id':str(i),'ptA':str(a),'ptB':str(b),'ptC':str(c)}
            self.triList.append(triangle)

        #extract edges
        for i in range(edges):
            edgeString = meshFile.readline().strip()
            regex = "\d+"
            match = re.findall(regex, edgeString) 
            a,b = int(match[0])-1,int(match[1])-1
            edge = {'id':str(i),'ptA':str(a),'ptB':str(b)}
            self.edgeList.append(edge)
        meshFile.close()
        self.build_lists()
